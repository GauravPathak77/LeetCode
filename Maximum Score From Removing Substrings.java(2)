class Solution {
    public int maximumGain(String s, int x, int y) {
        List<Character> list = new ArrayList<>();
        int ans = 0;

        for (Character ch : s.toCharArray()) {
            list.add(ch);
        }

        if (x > y) {
            ans += maximumGainUtil(list, x, 'a', 'b');
            ans += maximumGainUtil(list, y, 'b', 'a');
        } else {
            ans += maximumGainUtil(list, y, 'b', 'a');
            ans += maximumGainUtil(list, x, 'a', 'b');
        }

        return ans;
    }

    public int maximumGainUtil(List<Character> list, int currVal, char n1, char n2) {
        int idx = 0, ans = 0;
        
        while (idx < list.size() - 1) {
            if (list.get(idx) == n1 && list.get(idx + 1) == n2) {
                ans += currVal;
                list.remove(idx);
                list.remove(idx);
                idx = Math.max(idx - 1, 0);
            } else {
                idx++;
            }
        }

        return ans;
    }
}
